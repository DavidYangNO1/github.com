<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[I'm DavidYang]]></title>
  <link href="http://www.davidyanggo.me/atom.xml" rel="self"/>
  <link href="http://www.davidyanggo.me/"/>
  <updated>2017-02-12T22:28:46+08:00</updated>
  <id>http://www.davidyanggo.me/</id>
  <author>
    <name><![CDATA[David Yang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[鞋狗读后笔记]]></title>
    <link href="http://www.davidyanggo.me/blog/2017/02/12/shopdog/"/>
    <updated>2017-02-12T22:13:00+08:00</updated>
    <id>http://www.davidyanggo.me/blog/2017/02/12/shopdog</id>
    <content type="html"><![CDATA[<p>2017年春节在EBC徒步的路程中，利用每天下午休息的时间读完了 shop dog ,理清一下自己的感受</p>

<!--more-->


<p><img src="http://www.davidyanggo.me/images/shopdog.png"></p>

<p>鞋狗:耐克创始人菲尔·奈特 -24岁毕业找不到方向选择环球旅行，在加尔各答躺在棺材大小的木屋里面吃坏肚子，看过几十万人在瓦拉纳西朝圣，感受生死轮回，贫穷的印度，徒步在尼泊尔喜马拉雅山，最后流荡到日本看到了tiger日系鞋子，一个爱好田径运动，鞋子是最好的装备利器，找到了自己内心的冲动。可以说毕业的环球旅行影响着他一生面临的各种选择。</p>

<p>菲尔从一开始就是一个“骗子”，公司都没有，因为内心的冲动，喜欢田径，喜欢跑步直到遇到日本的tiger跑鞋，谎称自己在美国有一家公司，从争取到代理tiger跑鞋，在与北见的周旋以及后面与tiger的分手，银行借贷，每次都是走在悬崖边上，但是也因为他内心的正直，诚实，野心，得到了日商岩井看好，成为日商岩井-速水优最得意的门生：FBI的调查，菲尔差点进监狱，在别人看来菲尔在另起炉灶，欺骗，如果是其他人估计就撕破脸皮了，但是日商岩井看到的是菲尔的野心。</p>

<p>菲尔的自我激励：追随自己内心的冲动，将会更能忍受疲惫与孤独，每一次失望都会成为你的动力，需要攀登的高峰也会变得微不足道。菲尔一生都走在悬崖边上，代理权的真夺，与北见的分手，FBI的调查，马修的无解之谜（儿子的离开）。</p>

<p>菲尔的告诫：那些要求企业家永不放弃的人就是一骗子，有些时候你需要放弃，有些时候该尝试何时放弃并尝试新事物也是一种天赋。 放弃并不意味着停止，放弃不是什么面子问题，就好比这次EBC之行，如果不在Dingboqie理智撤退，也许就要出大事了，虽然内心是矛盾，不甘心。</p>

<p>菲尔的团队与管理方式：菲尔认为自己的团队成员就是天生的失败者，但是他坚信聚在一起肯定会胜利。他不会监视恶棍们（指的是他的团队），形成了强有力的相互信任，他的管理方式对那些需要每一步需要引导的人是没有效力的，团队会觉得自由和充分授权，让团队成员做真实的自己，让他们自己动手，自己犯错，自己承担责任。信任与授权，容易造成自我驱动，创造力与激情，这也与前段时间WI-FI CEO说创始人说不应该那么累一样道理，找到合适的人充分发挥他的能力，自我驱动。</p>

<p>菲尔的人生观： 相信自己，也要相信命运，不是别人的命运，不是自己定义的命运，而是在你的内心，对命运的自我定义。你越努力越接近道。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[阿里百川IM golang API接口]]></title>
    <link href="http://www.davidyanggo.me/blog/2016/11/08/openim/"/>
    <updated>2016-11-08T16:33:00+08:00</updated>
    <id>http://www.davidyanggo.me/blog/2016/11/08/openim</id>
    <content type="html"><![CDATA[<p>阿里百川IM golang API接口</p>

<!--more-->


<p>项目需要接阿里百川的IM，看官方文档没有golang版本的SDK，好吧只能够自己对着后台用golang 写对应的IM API，目前已经完成了添加好友，删除好友，更新好友。 在开发过程中发现阿里百川的返回格式只能够说太不严谨了，解析响应消息格式，希望他们能够好好完善吧，阿弥陀佛。</p>

<h1>封装的接口目录机构</h1>


<p>fl_const.go 主要是接口地址，appkey,appsecret的定义，根据参数获取阿里百川的沙盒。测试中发现阿里百川居然还没有实现沙箱环境，所以大家都用生产环境去测试吧。</p>

<p>fl_post.go  主要是一个通用的网络接口，参照百川的文档对参数排序，md5加密,调用百川的接口</p>

<p>fl_im.go  主要就是已经实现的3个业务接口，添加，更新，删除好友接口，至于百川的其它接口 可以仿照添加对应的接口调用</p>

<h1>好友添加Demo</h1>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="mi">1</span><span class="err">：配置</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">func</span> <span class="n">configIM</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">freeAliim</span><span class="p">.</span><span class="n">AppKey</span> <span class="o">=</span> <span class="n">freeFile</span><span class="p">.</span><span class="n">FlAppInfo</span><span class="p">.</span><span class="n">IMAppkey</span>
</span><span class='line'>      <span class="n">freeAliim</span><span class="p">.</span><span class="n">AppSecret</span> <span class="o">=</span> <span class="n">freeFile</span><span class="p">.</span><span class="n">FlAppInfo</span><span class="p">.</span><span class="n">IMAppSecret</span>
</span><span class='line'>      <span class="n">freeAliim</span><span class="p">.</span><span class="n">IsPro</span> <span class="o">=</span> <span class="n">freeFile</span><span class="p">.</span><span class="n">FlAppInfo</span><span class="p">.</span><span class="n">IsPro</span>
</span><span class='line'>      <span class="n">freeAliim</span><span class="p">.</span><span class="n">UseHTTP</span> <span class="o">=</span> <span class="n">freeFile</span><span class="p">.</span><span class="n">FlAppInfo</span><span class="p">.</span><span class="n">UseHTTP</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="mi">2</span><span class="err">：传参数</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">imUserinfo</span> <span class="o">:=</span> <span class="n">freeAliim</span><span class="p">.</span><span class="n">ImUserInfo</span><span class="p">{</span>
</span><span class='line'>      <span class="nl">Userid:</span>   <span class="n">userid</span><span class="p">,</span>
</span><span class='line'>      <span class="nl">Password:</span> <span class="n">pwd</span><span class="p">,</span>
</span><span class='line'>      <span class="nl">Name:</span>     <span class="n">name</span><span class="p">,</span>
</span><span class='line'>      <span class="nl">IconUrl:</span>  <span class="n">iconUrl</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="mi">3</span><span class="err">：</span> <span class="err">调用封装的接口</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">succ</span><span class="p">,</span> <span class="n">resposne</span> <span class="o">:=</span> <span class="n">freeAliim</span><span class="p">.</span><span class="n">SendAddUsers</span><span class="p">(</span><span class="n">imUserinfos</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">succ</span> <span class="o">==</span> <span class="kc">false</span> <span class="p">{</span>
</span><span class='line'>      
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<h1>总结</h1>


<p>选择小众语言就会遇上使用第三方SDK，没有对应的实现SDK，什么都要自己写，爱折腾
快乐编码，活着玩命，不是玩命活着，爱好徒步，目前创业中</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[golang + Protobuffs]]></title>
    <link href="http://www.davidyanggo.me/blog/2016/05/25/goprotobuf/"/>
    <updated>2016-05-25T00:28:00+08:00</updated>
    <id>http://www.davidyanggo.me/blog/2016/05/25/goprotobuf</id>
    <content type="html"><![CDATA[<p>许多APP在通讯交互格式这块，通常会选择JSON,或者 plain text, JSON应为Node.js 开发的上升尤其受欢迎。真实情况，JSON并不是很快的一种格式，所以protobuf 做为一种可选项，具体更快，更容易使用，速度比起JSON快多了。</p>

<!--more-->


<p>基于JSON与Protobu性能比较如下</p>

<p><img src="http://www.davidyanggo.me/images/benchmark.png"></p>

<p>下面就一步步讲解下golang 环境下这么使用protobuf</p>

<p>1)环境搭建
   1.1:mac 环境安装 protoc</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'>   <span class="n">brew</span> <span class="n">install</span> <span class="n">protoc</span>  <span class="p">(</span><span class="n">brew</span> <span class="n">mac</span> <span class="err">神器，你懂得</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>   1.2:安装protobuf 插件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'>   <span class="n">go</span> <span class="n">get</span> <span class="o">-</span><span class="n">u</span> <span class="n">github</span><span class="p">.</span><span class="n">com</span><span class="o">/</span><span class="n">golang</span><span class="o">/</span><span class="n">protobuf</span><span class="o">/</span><span class="n">protoc</span><span class="o">-</span><span class="n">gen</span><span class="o">-</span><span class="n">go</span>
</span></code></pre></td></tr></table></div></figure>


<p>2）通讯协议文件 .proto &ndash;> NetMessage.proto</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="c1">// version</span>
</span><span class='line'><span class="n">syntax</span> <span class="o">=</span> <span class="s">&quot;proto3&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1">// package of the file</span>
</span><span class='line'><span class="n">package</span> <span class="n">main</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">message</span> <span class="n">Client</span><span class="p">{</span>
</span><span class='line'>  <span class="n">required</span> <span class="n">int32</span> <span class="n">id</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>  <span class="n">optional</span> <span class="n">string</span> <span class="n">name</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>  <span class="n">optional</span> <span class="n">string</span> <span class="n">email</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
</span><span class='line'>  <span class="n">optional</span> <span class="n">string</span> <span class="n">country</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">message</span> <span class="n">Mail</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">optional</span> <span class="n">string</span> <span class="n">remoteEmail</span>  <span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>      <span class="n">optional</span> <span class="n">string</span> <span class="n">body</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">repeated</span> <span class="n">Mail</span> <span class="n">inbox</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>   以上定义了客户端与服务端通讯的消息格式</p>

<p>3）导出协议对应的go文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="n">protoc</span> <span class="o">--</span><span class="n">go_out</span><span class="o">=</span><span class="p">.</span> <span class="n">NetMessage</span><span class="p">.</span><span class="n">proto</span>
</span></code></pre></td></tr></table></div></figure>


<p>4) 创建服务端</p>

<p>   服务端主要是在POST消息体里面接收一个protobu。然后打印出打的内容，具体代码如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="n">package</span> <span class="n">main</span>
</span><span class='line'>
</span><span class='line'><span class="n">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;github.com/golang/protobuf/proto&quot;</span>
</span><span class='line'>  <span class="s">&quot;io/ioutil&quot;</span>
</span><span class='line'>  <span class="s">&quot;net/http&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">http</span><span class="p">.</span><span class="n">HandleFunc</span><span class="p">(</span><span class="s">&quot;/&quot;</span><span class="p">,</span> <span class="n">func</span><span class="p">(</span><span class="n">w</span> <span class="n">http</span><span class="p">.</span><span class="n">ResponseWriter</span><span class="p">,</span> <span class="n">r</span> <span class="o">*</span><span class="n">http</span><span class="p">.</span><span class="n">Request</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">myClient</span> <span class="o">:=</span> <span class="n">Client</span><span class="p">{}</span>
</span><span class='line'>      <span class="n">data</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">ioutil</span><span class="p">.</span><span class="n">ReadAll</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">Body</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="n">nil</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">fmt</span><span class="p">.</span><span class="n">Println</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">proto</span><span class="p">.</span><span class="n">Unmarshal</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">myClient</span><span class="p">);</span> <span class="n">err</span> <span class="o">!=</span> <span class="n">nil</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">fmt</span><span class="p">.</span><span class="n">Println</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">println</span><span class="p">(</span><span class="n">myClient</span><span class="p">.</span><span class="n">Id</span><span class="p">,</span> <span class="s">&quot;:&quot;</span><span class="p">,</span> <span class="n">myClient</span><span class="p">.</span><span class="n">Name</span><span class="p">,</span> <span class="s">&quot;:&quot;</span><span class="p">,</span> <span class="n">myClient</span><span class="p">.</span><span class="n">Email</span><span class="p">,</span> <span class="s">&quot;:&quot;</span><span class="p">,</span> <span class="n">myClient</span><span class="p">.</span><span class="n">Country</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">for</span> <span class="n">_</span><span class="p">,</span> <span class="n">mail</span> <span class="o">:=</span> <span class="n">range</span> <span class="n">myClient</span><span class="p">.</span><span class="n">Inbox</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">fmt</span><span class="p">.</span><span class="n">Println</span><span class="p">(</span><span class="n">mail</span><span class="p">.</span><span class="n">RemoteEmail</span><span class="p">,</span> <span class="s">&quot;:&quot;</span><span class="p">,</span> <span class="n">mail</span><span class="p">.</span><span class="n">Body</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>  <span class="n">http</span><span class="p">.</span><span class="n">ListenAndServe</span><span class="p">(</span><span class="s">&quot;:3000&quot;</span><span class="p">,</span> <span class="n">nil</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>5) 创建客户端
   客户端主要创建代码生成的client 结构体，把它的内容发送到服务器，代码如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="n">package</span> <span class="n">main</span>
</span><span class='line'>
</span><span class='line'><span class="n">import</span> <span class="p">(</span>
</span><span class='line'>  <span class="s">&quot;bytes&quot;</span>
</span><span class='line'>  <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>  <span class="s">&quot;github.com/golang/protobuf/proto&quot;</span>
</span><span class='line'>  <span class="s">&quot;net/http&quot;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">myClient</span> <span class="o">:=</span> <span class="n">Client</span><span class="p">{</span><span class="nl">Id:</span> <span class="mi">1</span><span class="p">,</span> <span class="nl">Name:</span> <span class="s">&quot;David Yang&quot;</span><span class="p">,</span> <span class="nl">Email:</span> <span class="s">&quot;davidyanggo@gmail.com&quot;</span><span class="p">,</span> <span class="nl">Country:</span> <span class="s">&quot;CH&quot;</span><span class="p">}</span>
</span><span class='line'>  <span class="n">clientInbox</span> <span class="o">:=</span> <span class="n">make</span><span class="p">([]</span><span class="o">*</span><span class="n">Client_Mail</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">20</span><span class="p">)</span>
</span><span class='line'>  <span class="n">clientInbox</span> <span class="o">=</span> <span class="n">append</span><span class="p">(</span><span class="n">clientInbox</span><span class="p">,</span>
</span><span class='line'>      <span class="o">&amp;</span><span class="n">Client_Mail</span><span class="p">{</span><span class="nl">RemoteEmail:</span> <span class="s">&quot;davidyanggo1@gmail.com&quot;</span><span class="p">,</span> <span class="nl">Body:</span> <span class="s">&quot;Hello. davidyanggo1.&quot;</span><span class="p">},</span>
</span><span class='line'>      <span class="o">&amp;</span><span class="n">Client_Mail</span><span class="p">{</span><span class="nl">RemoteEmail:</span> <span class="s">&quot;davidyanggo2@gmail.com&quot;</span><span class="p">,</span> <span class="nl">Body:</span> <span class="s">&quot;Bye, davidyanggo2.&quot;</span><span class="p">}</span>
</span><span class='line'>  <span class="p">)</span>
</span><span class='line'>  <span class="n">myClient</span><span class="p">.</span><span class="n">Inbox</span> <span class="o">=</span> <span class="n">clientInbox</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">data</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">proto</span><span class="p">.</span><span class="n">Marshal</span><span class="p">(</span><span class="o">&amp;</span><span class="n">myClient</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="n">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">fmt</span><span class="p">.</span><span class="n">Println</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">_</span><span class="p">,</span> <span class="n">err</span> <span class="o">=</span> <span class="n">http</span><span class="p">.</span><span class="n">Post</span><span class="p">(</span><span class="s">&quot;http://localhost:3000&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="n">bytes</span><span class="p">.</span><span class="n">NewBuffer</span><span class="p">(</span><span class="n">data</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="n">nil</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">fmt</span><span class="p">.</span><span class="n">Println</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>总结：
protobuf 很容易使用，提高应用程序的交互速度，推荐在项目里面使用。
想要更深入了解参考一下文档：<a href="https://developers.google.com/protocol-buffers/docs/gotutorial">https://developers.google.com/protocol-buffers/docs/gotutorial</a></p>

<p>快乐编码，活着玩命，不是玩命活着</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ios 结合 golang gomobile 产生这样的火花]]></title>
    <link href="http://www.davidyanggo.me/blog/2016/03/25/gomobile-ios/"/>
    <updated>2016-03-25T02:55:00+08:00</updated>
    <id>http://www.davidyanggo.me/blog/2016/03/25/gomobile-ios</id>
    <content type="html"><![CDATA[<p>golang 开发基础服务组件，write once, run everwhere(主要是iOS，Android)</p>

<!--more-->


<p>gomobile 工具让你编译go 代码，在iOS 里面调用，使用gomobile,可以把golang 写的基础组件，在Android,iOS,服务端直接共享，通讯。
下面的教程主要讲下从配置环境的iOS里面调用go package代码.</p>

<h1>安装gomobile</h1>


<p>首先：下载安装gomobile</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="mi">1</span><span class="o">:</span><span class="n">go</span> <span class="n">get</span> <span class="n">golang</span><span class="p">.</span><span class="n">org</span><span class="o">/</span><span class="n">x</span><span class="o">/</span><span class="n">mobile</span><span class="o">/</span><span class="n">cmd</span><span class="o">/</span><span class="n">gomobile</span>
</span><span class='line'><span class="mi">2</span><span class="o">:</span><span class="n">gomobile</span> <span class="n">init</span>
</span></code></pre></td></tr></table></div></figure>


<p>第1步主要是下载安装，第二步会配置安装编译器，主要是用来打包成ios，Android,底层是C++编译器，生成打包的。主要是下载下面两个包：gomobile-ndk-r10e-linux-x86_64，gomobile-ndk-r10e-darwin-x86_64。需要翻墙。</p>

<h1>用go写一个基础组件，golang里面叫做Package</h1>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="n">package</span> <span class="n">example</span>
</span><span class='line'>
</span><span class='line'><span class="n">func</span> <span class="n">Add</span><span class="p">(</span><span class="n">x</span> <span class="kt">int</span><span class="p">,</span> <span class="n">y</span> <span class="kt">int</span><span class="p">)</span> <span class="kt">int</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>使用下面命令编译上面的go代码，生成Framework.
gomobile bind -target ios package文件夹。</p>

<p>上面会生成一个以go package命名的iOS framework</p>

<h1>iOS 调用 framework</h1>


<p>把上面生成的framework 拖到xcode 工程里面去,
打包生成的go代码到OC这边都是C函数，以go+package+go函数名称 命名的，
OC就可以直接调用了。</p>

<h1>gomobile的遐想</h1>


<p>gomobile 解决了前后端write run everwhere.简单说移动端的基础组件，服务，可以用golang 来写，android,iOS都可以调用。 做基础组件开发不错选择。至于是否可以用golang 来开个进程，给iOS弄个后天服务，不知道可行么，后续可以尝试下。拥抱未来吧</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[roundCorners]]></title>
    <link href="http://www.davidyanggo.me/blog/2016/03/22/roundcorners/"/>
    <updated>2016-03-22T23:20:00+08:00</updated>
    <id>http://www.davidyanggo.me/blog/2016/03/22/roundcorners</id>
    <content type="html"><![CDATA[<p>现实世界是没有边界的，地球是园的。 iOS 里面的UIViews 也是可以弄成圆的，对一个UIView 生成圆角第一反应是修改CALayer属性</p>

<!--more-->


<p>用过设置view.layer.cornerRadius = num;</p>

<p><img src="http://www.davidyanggo.me/images/round1.png"></p>

<p>但是如果产品有个需求，只需要设置某个角是圆角，而不是4个角都是圆角，这么解决？
好吧，求美术MM还不如自己搞定。ios 里面可以用过mask,结合UIBezierPath来达到目的
具体代码如下:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="n">let</span> <span class="nl">cornerRadius:</span> <span class="n">CGFloat</span> <span class="o">=</span> <span class="mi">8</span>
</span><span class='line'><span class="n">let</span> <span class="n">maskLayer</span> <span class="o">=</span> <span class="n">CAShapeLayer</span><span class="p">()</span>
</span><span class='line'><span class="n">maskLayer</span><span class="p">.</span><span class="n">path</span> <span class="o">=</span> <span class="n">UIBezierPath</span><span class="p">(</span><span class="nl">roundedRect:</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span><span class="p">,</span>
</span><span class='line'>                            <span class="nl">byRoundingCourners:</span><span class="p">[.</span><span class="n">BottomLeft</span><span class="p">,.</span><span class="n">BottomRight</span><span class="p">],</span>
</span><span class='line'>                            <span class="nl">cornerRadii:</span><span class="n">CGSize</span><span class="p">(</span><span class="nl">width:</span><span class="n">cornerRadius</span><span class="p">,</span><span class="nl">height:</span><span class="n">cornerRadius</span><span class="p">)</span>
</span><span class='line'>                          <span class="p">).</span><span class="n">CGPath</span>
</span><span class='line'><span class="n">view</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">mask</span> <span class="o">=</span> <span class="n">mskLayer</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://www.davidyanggo.me/images/round2.png"></p>

<p>通过byRoundingCorners 属性数组，你可以按照4个角配置其中几个圆角</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[xcode 版本管理]]></title>
    <link href="http://www.davidyanggo.me/blog/2015/11/18/xcode-ban-ben-guan-li/"/>
    <updated>2015-11-18T00:35:00+08:00</updated>
    <id>http://www.davidyanggo.me/blog/2015/11/18/xcode-ban-ben-guan-li</id>
    <content type="html"><![CDATA[<p>xcode agvtool 版本管理命令</p>

<!--more-->


<p>xcode agvtool 版本管理命令
agvtool 主要是管理项目的版本工具
xcode 项目工程文件project.pbxproj包含项目版本CURRENT_PROJECT_VERSION，agvtool工具运行的时候会查看 project.pbxproj里面的CURRENT_PROJECT_VERSION是否存在，如果存在然后更新build版本号，不存在在Xcode建立CURRENT_PROJECT_VERSION再去使用agvtool</p>

<p>主要是通过命令行来修改版本号，项目版本号</p>

<p>1：修改版本号
agvtool new-marketing-version &lt;your_specific_version>
etc. agvtool new-marketing-version 2.0
上面命令主要会更新info.plist 里面的CFBundleShortVersionString 版本号位2.0</p>

<p>2：修改build 版本号</p>

<p>  2.1 自动增加build 版本号
  agvtool next-version -all
  上面命令会自动把当前版本增加到大于当前的整数版本号
  2.2 制定特定的版本号
  agvtool new-version -all &lt;your_specific_version>
  etc. agvtool new-version -all 2.6.9</p>

<p>3：版本号查看
  3.1 查看当前版本
  agvtool what-marketing-version</p>

<p>  3.2 查看当前构建版本
  agvtool what-version</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ios9 网络问题 schema白名单]]></title>
    <link href="http://www.davidyanggo.me/blog/2015/09/08/ios9-wang-luo-wen-ti-schema/"/>
    <updated>2015-09-08T12:41:00+08:00</updated>
    <id>http://www.davidyanggo.me/blog/2015/09/08/ios9-wang-luo-wen-ti-schema</id>
    <content type="html"><![CDATA[<p>ios 9 适配两个明显的问题</p>

<!--more-->


<p>1：网络问题
   iOS9 网络协议开始从http转换到https. 所以你的app 如果服务器不支持tls2估计很多网络模块打不开什么
   有两中解决方案：1) 服务器升级支持https</p>

<pre><code>             2) 或者在plist添加申明，不适用默认的https,转到http协议，具体做法如下
             &lt;img src="http://www.davidyanggo.me/images/schema.png"&gt; 
</code></pre>

<p>2：schema 白名单问题，白名单，IOS9 需要把你要打开的schema 添加到info.plist 白名单里面去
参考如下：
<key>LSApplicationQueriesSchemes</key>
<array></p>

<pre><code>&lt;string&gt;twitter&lt;/string&gt;
&lt;string&gt;whatsapp&lt;/string&gt;
</code></pre>

<p></array></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mvc vs mvvm]]></title>
    <link href="http://www.davidyanggo.me/blog/2015/05/05/mvc-vs-mvvm/"/>
    <updated>2015-05-05T00:39:00+08:00</updated>
    <id>http://www.davidyanggo.me/blog/2015/05/05/mvc-vs-mvvm</id>
    <content type="html"><![CDATA[<p>前段时间，结合公司的项目实际情况，做了MVC vs MVVM的框架比较，技术分享</p>

<!--more-->


<p>1）MVC FLow</p>

<pre><code>1:MVC是最初的UI设计模式，1970年的时候就出现了，最早出现在Smalltalk语言中，
2:介绍MVC 这种模式
3:上图这种Model-View-Controller之间的环状关系
</code></pre>

<p><img src="http://www.davidyanggo.me/images/mvc1.png"></p>

<p>2） MVC Case</p>

<pre><code>1：流程图介绍
2：Massive View Controller
3：目前的项目
</code></pre>

<p><img src="http://www.davidyanggo.me/images/mvc2.png"></p>

<p>3）MVC劣势</p>

<pre><code>1:Massive Controller，关联了View,Model,双向环状关系，
  不利于后续维护，特别是多人协作时候，一个Controller文件动辄就几千行代码

2:关系复杂，后续UI风格更新，在几千行代码修改什么感觉？一不留神改了model，或者controller的东西，容易产生bug

3:单元测试不方便， 改动的范围不能够控制在一个较小的范围。

4:不能够复用。
  比如iphone版本，ipad版本，不管UI这么变，业务逻辑是基本相同的，Controller与model，view这种强耦合关系不方便复用
</code></pre>

<p><img src="http://www.davidyanggo.me/images/mvc3.png"></p>

<p>4）mvvm 本质</p>

<pre><code>1:view 引用了View Model,单向的
2:ViewModel 引用了Model,单向的
</code></pre>

<p><img src="http://www.davidyanggo.me/images/mvvm1.png"></p>

<p>5) mvvm 流程图讲解</p>

<pre><code>1：MVVM模式依赖于数据绑定，它是一个框架级别的特性，用于自动连接对象属性和UI控件
2：IOS没有数据绑定框架，可以通过ReactiveCocoa来实现数据绑定功能
3：ReactiveCocoa开源的项目，目的就是定义一个统一的事件处理接口，这样它们可以非常简单地进行链接、过滤和组合。
   ReactiveCocoa结合了一些编程模式：
   函数式编程：利用高阶函数，即将函数作为其它函数的参数。
   响应式编程：关注于数据流及变化的传播
</code></pre>

<p><img src="http://www.davidyanggo.me/images/mvvm2.png"></p>

<p>6)mvvm 优势</p>

<pre><code>1：低耦合
   视图（View）可以独立于Model变化和修改，一个ViewModel可以绑定到不同的"View"上，当View变化的时候Model可以不变，当Model变化的时候View也可以不变。
2：可重用性
   对于iphoen,ipad不同版本，不同的只是UI, 视图逻辑放到ViewModel,可以达到视图逻辑重用
3：独立开发
   开发人员可以专注于ViewModel，model的开发，UI开发人员通过Controller,View,xib,storyboad专注页面，模块业务清晰
4：单元测试
   ViewModel 独立于UI很方便做单元测试，不会像MVC里面的Controle一样做测试那么别扭
</code></pre>

<p><img src="http://www.davidyanggo.me/images/mvvm3.png"></p>

<p>7）总结：从产品项目开发的经验来看，显然mvvm比起mvc这种模式优势很明显，推荐大家引入到实际项目中去，主要是思想上</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[移动端视频外挂字幕解决方案]]></title>
    <link href="http://www.davidyanggo.me/blog/2014/04/13/yi-dong-duan-shi-pin-wai-gua-zi-mu-jie-jue-fang-an/"/>
    <updated>2014-04-13T23:21:52+08:00</updated>
    <id>http://www.davidyanggo.me/blog/2014/04/13/yi-dong-duan-shi-pin-wai-gua-zi-mu-jie-jue-fang-an</id>
    <content type="html"><![CDATA[<p>webvtt字幕文件已经很好的支持跨平台，特别是 html5的支持。 ios 6以后在这方面也已经无缝集成，底层做字幕渲染支持。</p>

<!--more-->


<p>首先说下外挂字幕的场景吧，有需求的地方才会有技术的跟进。 想必大家都看过美剧吧，视频运营商拿过来的很多已经内部集成了e文，那要翻译显示中文就是外挂字幕上场了，webvtt 技术就很好解决了这个问题。</p>

<p>有需求才有市场，下面就谈谈外挂字幕webvtt文件这么在视频里面集成。</p>

<p>1） 首先是说下在ios系统下字幕文件与视频播放文件的流程。 直接看流程图</p>

<p><img src="http://www.davidyanggo.me/images/vtt_1.png"></p>

<p>m3u8文件是为了多码率的适配而提出的，为了支持外挂字体，需要整合vtt与m3u8文件。整个合并步骤流程图如上，下面说下具体的步骤
2） 创建webvtt 外挂字幕（字幕拓展名为.vtt）</p>

<p>.vtt 文件可以像.ts文件一样，利用mediasubtitlesegmenter工具
拆成片段，每一个片段都是一个小的.vtt字幕文件，.vtt文件内容以及拆分的片段文件列表如下截图：</p>

<p><img src="http://www.davidyanggo.me/images/vtt_2.png"></p>

<p>上面是具体的.vtt 文件内容， 有起始时间，结束时间，显示相对位置</p>

<p><img src="http://www.davidyanggo.me/images/vtt_3.png"></p>

<p>3)建立一个.m3u8 字幕播放列表文件.</p>

<p>把上面拆分的字幕文件.vtt 的链接地址url放到.m3u8字幕播放列表文件里面，字幕url地址可以是绝对路径或者相对路径, 具体的内容如下截图：</p>

<p><img src="http://www.davidyanggo.me/images/vtt_4.png"></p>

<p>上面是字幕文件集合，也就是subtitle.m3u8 的文件内容</p>

<p>4)添加.m3u8 字幕文件播放列表地址到主.m3u8播放文件里面</p>

<p>主.m3u8文件内容主要包含字幕文件地址与ts文件地址，ts文件与字幕文件主要通过Group-ID,SUBTITLES 属性建立视频内容与文字对应关系，主.m3u8文件具体内容如下截图</p>

<p><img src="http://www.davidyanggo.me/images/vtt_5.png"></p>

<p>5)主.m3u8文件解释，主要介绍几个关键的属性</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cp">#EXT-X-MEDIA:TYPE=SUBTITLES,GROUP-ID=&quot;subs&quot;,NAME=&quot;English&quot;,DEFAULT=YES,AUTOSELECT=YES,FORCED=NO,LANGUAGE=&quot;eng&quot;,URI=&quot;Subtitle.m3u8&quot; </span>
</span></code></pre></td></tr></table></div></figure>


<p>表示链接到字幕文件的相关属性设置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cp">#EXT-X-MEDIA:TYPE=SUBTITLES 表示字幕文件标识 </span>
</span><span class='line'><span class="n">GROUP</span><span class="o">-</span><span class="n">ID</span><span class="o">=</span><span class="s">&quot;subs&quot;</span> <span class="err">表示字幕文件与</span><span class="n">ts</span><span class="err">文件对应的标识，</span>
</span><span class='line'><span class="n">DEFAULT</span><span class="o">=</span> <span class="n">YES</span>  <span class="err">表示视频播放默认的字幕文件</span>
</span><span class='line'><span class="n">LANGUAGE</span><span class="o">=</span><span class="s">&quot;eng&quot;</span> <span class="err">表示字幕语言</span><span class="p">,</span><span class="err">支持多语言字幕</span>
</span><span class='line'><span class="n">URI</span><span class="o">=</span><span class="s">&quot;Subtitle.m3u8  字幕的路径文件名</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=263851,CODECS=&quot;mp4a.40.2, avc1.4d400d&quot;,RESOLUTION=416x234,AUDIO=&quot;bipbop_audio&quot;,SUBTITLES=&quot;subs&quot; </span>
</span><span class='line'><span class="n">aaa</span><span class="p">.</span><span class="n">m3u8</span>
</span><span class='line'><span class="err">表示链接的</span><span class="n">ts</span><span class="err">文件相关属性设置</span>
</span><span class='line'><span class="n">SUBTITLES</span><span class="o">=</span><span class="s">&quot;subs&quot;</span>  <span class="err">链接到字幕文件，建立</span><span class="n">ts</span><span class="err">文件与字幕文件标识</span>
</span><span class='line'><span class="n">aaa</span><span class="p">.</span><span class="n">m3u8</span> <span class="err">里面都是对应的</span><span class="n">ts</span><span class="err">文件</span>
</span></code></pre></td></tr></table></div></figure>


<p>按照上面的流程建立好webvtt文件。之后就是视频客户端解析。</p>

<p>ios 端 vtt接口VTTSettingManager.h 的实现</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="err">@</span><span class="n">interface</span> <span class="n">VTTSettingManager</span> <span class="o">:</span> <span class="n">NSObject</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">retain</span><span class="p">)</span> <span class="n">AVPlayer</span> <span class="o">*</span> <span class="n">player</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="n">id</span><span class="p">)</span><span class="nl">initWithPlayer:</span><span class="p">(</span><span class="n">AVPlayer</span><span class="o">*</span><span class="p">)</span><span class="n">newPlayer</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* ! vtt 字幕设置</span>
</span><span class='line'><span class="cm"> * @pram: entity 字幕实体类</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">setVttFontStyle:</span><span class="p">(</span><span class="n">VTTSettingEntity</span><span class="o">*</span><span class="p">)</span><span class="n">entity</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/* ! 开启字幕</span>
</span><span class='line'><span class="cm"> *   如果影片有webvtt 设置才起作用</span>
</span><span class='line'><span class="cm"> *   返回true 有字幕,操作成功，false 影片没有字幕，操作失败</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="n">BOOL</span><span class="p">)</span><span class="n">enableVtt</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/* ! 关闭字幕</span>
</span><span class='line'><span class="cm"> *   如果影片有webvtt 设置才起作用</span>
</span><span class='line'><span class="cm"> *   返回true 操作成功，false 操作失败</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="n">BOOL</span><span class="p">)</span><span class="n">disableVtt</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* ! 设置字幕语言(要设置的区域， vtt文件需要存在对于的区域语言 )</span>
</span><span class='line'><span class="cm"> * @pram: localeIdentifier 区域 如en_US</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="n">BOOL</span><span class="p">)</span><span class="nl">setVTTLanguage:</span><span class="p">(</span><span class="n">NSString</span><span class="o">*</span><span class="p">)</span><span class="n">localeIdentifier</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cm">/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * webvtt 字幕设置实体类</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/</span>
</span><span class='line'><span class="err">@</span><span class="n">interface</span> <span class="n">VTTSettingEntity</span> <span class="o">:</span> <span class="n">NSObject</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">retain</span><span class="p">)</span> <span class="n">NSString</span> <span class="o">*</span> <span class="n">fontFamilyName</span><span class="p">;</span>   <span class="c1">//(不传值，默认为空) 字体家族</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span> <span class="kt">float</span> <span class="n">relativeSize</span><span class="p">;</span>          <span class="c1">//(不传值，默认是100) 字体相对大小 如：relativeSize ==120 表示字体大小为原来的120%</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span> <span class="kt">float</span>  <span class="n">fr</span><span class="p">;</span>  <span class="c1">//The foreground color for text,representing r  0.0-1.0</span>
</span><span class='line'><span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span> <span class="kt">float</span>  <span class="n">fg</span><span class="p">;</span>  <span class="c1">//The foreground color for text,representing g  0.0-1.0</span>
</span><span class='line'><span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span> <span class="kt">float</span>  <span class="n">fb</span><span class="p">;</span>  <span class="c1">//The foreground color for text,representing b  0.0-1.0</span>
</span><span class='line'><span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span> <span class="kt">float</span>  <span class="n">fa</span><span class="p">;</span>  <span class="c1">//The foreground color for text,representing a  0.0-1.0</span>
</span><span class='line'><span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span> <span class="n">BOOL</span>  <span class="n">foregroundColorEnable</span><span class="p">;</span>    <span class="c1">// (fr,fg,fb,fa传了值，foregroundColorEnable设置为true，默认是false)foreground color enable;</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span> <span class="kt">float</span>  <span class="n">br</span><span class="p">;</span>  <span class="c1">//The background color for text,representing r  0.0-1.0</span>
</span><span class='line'><span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span> <span class="kt">float</span>  <span class="n">bg</span><span class="p">;</span>  <span class="c1">//The background color for text,representing g  0.0-1.0</span>
</span><span class='line'><span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span> <span class="kt">float</span>  <span class="n">bb</span><span class="p">;</span>  <span class="c1">//The background color for text,representing b  0.0-1.0</span>
</span><span class='line'><span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span> <span class="kt">float</span>  <span class="n">ba</span><span class="p">;</span>  <span class="c1">//The background color for text,representing a  0.0-1.0</span>
</span><span class='line'><span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span> <span class="n">BOOL</span>  <span class="n">backgroundColorEnable</span><span class="p">;</span>    <span class="c1">//(br,bg,bb,ba传了值，backgroundColorEnable设置为true，默认是false) background color enable;</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span> <span class="n">BOOL</span> <span class="n">boldStyle</span><span class="p">;</span>    <span class="c1">// (不传值，默认是false)设置粗体</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span> <span class="n">BOOL</span> <span class="n">italicStyle</span><span class="p">;</span>  <span class="c1">// (不传值，默认是false)设置斜体</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">assign</span><span class="p">)</span> <span class="n">BOOL</span> <span class="n">underlineStyle</span><span class="p">;</span>  <span class="c1">//(不传值，默认是false)设置下划线</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">property</span><span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span><span class="n">retain</span><span class="p">)</span> <span class="n">NSString</span> <span class="o">*</span> <span class="n">cssName</span><span class="p">;</span>   <span class="c1">//(不传值，默认是空)css style name;</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="n">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>参考文档</p>

<p><a href="http://en.wikipedia.org/wiki/HTTP_Live_Streaming">http://en.wikipedia.org/wiki/HTTP_Live_Streaming</a></p>

<p><a href="https://developer.apple.com/streaming">https://developer.apple.com/streaming</a></p>
]]></content>
  </entry>
  
</feed>
